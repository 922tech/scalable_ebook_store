# Generated by Django 4.2.11 on 2024-09-27 05:46

import apps.store.models
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("title", models.CharField(max_length=255)),
                ("publication_date", models.DateField()),
                ("author", models.CharField(max_length=255)),
                ("pages", models.PositiveIntegerField()),
                (
                    "cover_image",
                    models.ImageField(blank=True, null=True, upload_to="covers/"),
                ),
                ("summary", models.TextField()),
                (
                    "file_dict",
                    models.JSONField(
                        default=dict,
                        validators=[
                            apps.store.models.FileUrlSchemaValidator.schema_validator,
                            apps.store.models.FileUrlSchemaValidator.validate_url,
                        ],
                    ),
                ),
                (
                    "sample_file_dict",
                    models.JSONField(
                        default=dict,
                        validators=[
                            apps.store.models.FileUrlSchemaValidator.schema_validator,
                            apps.store.models.FileUrlSchemaValidator.validate_url,
                        ],
                    ),
                ),
                ("price", models.PositiveBigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("rating", models.PositiveIntegerField()),
                ("comment", models.TextField()),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="store.book",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.profile"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PaymentDataLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "metadata",
                    models.JSONField(default=dict, help_text="Payment metadata"),
                ),
                (
                    "gateway",
                    models.CharField(
                        choices=[("stripe", "Stripe"), ("sadad", "Sadad")],
                        max_length=63,
                    ),
                ),
                (
                    "tracking_code",
                    models.CharField(
                        help_text="a value from metadata that is used as tracking code",
                        max_length=255,
                    ),
                ),
                (
                    "log_type",
                    models.IntegerField(
                        choices=[(0, "Request"), (1, "Verify")], max_length=15
                    ),
                ),
            ],
            options={
                "indexes": [
                    django.contrib.postgres.indexes.HashIndex(
                        fields=["tracking_code"], name="tracking_code_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("payment_id", models.CharField(max_length=255)),
                ("amount", models.PositiveBigIntegerField(editable=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("successful", "Successful"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=12,
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="store.book",
                    ),
                ),
                (
                    "log",
                    models.OneToOneField(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="store.paymentdatalog",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.profile"
                    ),
                ),
            ],
            options={
                "indexes": [
                    django.contrib.postgres.indexes.HashIndex(
                        fields=["payment_id"], name="payment_id_idx"
                    )
                ],
            },
        ),
    ]
